<?xml version="1.0" encoding="ISO-8859-1"?>
<!-- OPML generated by OPML Editor v10.1b19 on Thu, 01 Feb 2024 01:24:58 GMT -->

<!-- 
   Hi this is Dave Winer. I write all my project code in an outliner, which 
   generates all the files that make up this GitHub project. You'll see a 
   source.opml file like this in each of my projects. It contains the outline 
   source that the repo files were generated from. This is the most logical place 
   to store them. You can read the code in any outliner that supports OPML, which 
   includes https://drummer.land. You can use the Open URL command in 
   Drummer's File menu to open the "raw" version of this file straight from the 
   GitHub repo.
 -->

<opml version="2.0">
	<head>
		<title>nodeEditor: batchLoader2</title>
		<dateCreated>Sat, 04 Dec 2021 16:34:17 GMT</dateCreated>
		<dateModified>Thu, 01 Feb 2024 01:24:57 GMT</dateModified>
		<ownerName>Dave Winer</ownerName>
		<ownerId>http://davewiner.com/</ownerId>
		<expansionState>1, 2, 3, 7, 9, 10, 12</expansionState>
		<vertScrollState>1</vertScrollState>
		<windowTop>165</windowTop>
		<windowLeft>862</windowLeft>
		<windowBottom>970</windowBottom>
		<windowRight>2054</windowRight>
		</head>
	<body>
		<outline text="/scripting.com/code/batchloader2/">
			<outline text="worknotes.md" created="Thu, 01 Feb 2024 01:19:47 GMT">
				<outline text="#### 1/31/24; 8:19:51 PM by DW" created="Thu, 01 Feb 2024 01:19:49 GMT">
					<outline text="testing locally" created="Thu, 01 Feb 2024 01:19:51 GMT"/>
					</outline>
				</outline>
			<outline text="package.json" created="Sat, 04 Dec 2021 16:37:06 GMT">
				<outline text="{">
					<outline text="&quot;name&quot;: &quot;batchloader2&quot;,"/>
					<outline text="&quot;version&quot;: &quot;0.4.0&quot;,"/>
					<outline text="&quot;author&quot;: &quot;Dave Winer &lt;dave@scripting.com&gt;&quot;,"/>
					<outline text="&quot;main&quot;: &quot;batchloader2.js&quot;,"/>
					<outline text="&quot;dependencies&quot;: {">
						<outline text="&quot;daveutils&quot;: &quot;*&quot;,"/>
						<outline text="&quot;s3folderloader&quot;: &quot;*&quot;,"/>
						<outline text="&quot;davehttp&quot;: &quot;*&quot;"/>
						<outline text="}"/>
						</outline>
					<outline text="}"/>
					</outline>
				</outline>
			<outline text="batchloader2.js" created="Sat, 04 Dec 2021 16:35:07 GMT">
				<outline text="const myVersion = &quot;0.4.0&quot;, myProductName = &quot;batchloader2&quot;; "/>
				<outline text=""/>
				<outline text="const fs = require (&quot;fs&quot;);"/>
				<outline text="const utils = require (&quot;daveutils&quot;);"/>
				<outline text="const davehttp = require (&quot;davehttp&quot;);"/>
				<outline text="const s3folderloader = require (&quot;s3folderloader&quot;);"/>
				<outline text=""/>
				<outline text="const servername = &quot;dallas&quot;;" created="Sat, 04 Dec 2021 16:38:23 GMT"/>
				<outline text="" created="Sat, 04 Dec 2021 16:38:30 GMT"/>
				<outline text="var config = {">
					<outline text="port: process.env.PORT || 1408,"/>
					<outline text="flLogToConsole: true,"/>
					<outline text="flAllowAccessFromAnywhere: true, "/>
					<outline text="timeOutSecs: 3,"/>
					<outline text="s3path: &quot;/allservers.scripting.com/&quot; + servername + &quot;/pagepark/&quot;,"/>
					<outline text="basefolder: &quot;/root/&quot; + servername + &quot;/pagepark/&quot;"/>
					<outline text="}"/>
					</outline>
				<outline text=""/>
				<outline text="function readConfig (f, config, callback) {" created="Mon, 08 Mar 2021 15:19:44 GMT">
					<outline text="fs.readFile (f, function (err, jsontext) {" created="Mon, 08 Mar 2021 15:19:57 GMT">
						<outline text="if (!err) {" created="Mon, 08 Mar 2021 15:20:27 GMT">
							<outline text="try {" created="Mon, 08 Mar 2021 15:20:49 GMT">
								<outline text="var jstruct = JSON.parse (jsontext);" created="Mon, 08 Mar 2021 15:21:07 GMT"/>
								<outline text="for (var x in jstruct) {" created="Mon, 08 Mar 2021 15:21:14 GMT">
									<outline text="config [x] = jstruct [x];" created="Mon, 08 Mar 2021 15:21:20 GMT"/>
									<outline text="}" created="Mon, 08 Mar 2021 15:21:25 GMT"/>
									</outline>
								<outline text="}" created="Mon, 08 Mar 2021 15:20:58 GMT"/>
								</outline>
							<outline text="catch (err) {" created="Mon, 08 Mar 2021 15:20:59 GMT">
								<outline text="console.log (&quot;Error reading &quot; + f);" created="Mon, 08 Mar 2021 15:20:35 GMT"/>
								<outline text="}" created="Mon, 08 Mar 2021 15:21:03 GMT"/>
								</outline>
							<outline text="}" created="Mon, 08 Mar 2021 15:20:30 GMT"/>
							</outline>
						<outline text="callback ();" created="Mon, 08 Mar 2021 15:22:15 GMT"/>
						<outline text="});" created="Mon, 08 Mar 2021 15:20:25 GMT"/>
						</outline>
					<outline text="}" created="Mon, 08 Mar 2021 15:19:56 GMT"/>
					</outline>
				<outline text="" created="Thu, 01 Feb 2024 01:24:22 GMT"/>
				<outline text="readConfig (&quot;config.json&quot;, config, function ()  {" created="Sat, 12 Aug 2023 23:07:16 GMT">
					<outline text="console.log (&quot;config == &quot; + utils.jsonStringify (config));" created="Mon, 14 Aug 2023 14:26:45 GMT"/>
					<outline text="davehttp.start (config, function (theRequest) {">
						<outline text="function returnOpml (opmltext) {">
							<outline text="theRequest.httpReturn (200, &quot;text/xml&quot;, opmltext);"/>
							<outline text="}"/>
							</outline>
						<outline text="function returnData (jstruct) {">
							<outline text="if (jstruct === undefined) {">
								<outline text="jstruct = {};"/>
								<outline text="}"/>
								</outline>
							<outline text="theRequest.httpReturn (200, &quot;application/json&quot;, utils.jsonStringify (jstruct));"/>
							<outline text="}"/>
							</outline>
						<outline text="function returnError (jstruct) {">
							<outline text="theRequest.httpReturn (500, &quot;application/json&quot;, utils.jsonStringify (jstruct));"/>
							<outline text="}"/>
							</outline>
						<outline text="function httpReturn (err, jstruct) {">
							<outline text="if (err) {">
								<outline text="returnError (err);"/>
								<outline text="}"/>
								</outline>
							<outline text="else {">
								<outline text="returnData (jstruct);"/>
								<outline text="}"/>
								</outline>
							<outline text="}"/>
							</outline>
						<outline text="switch (theRequest.lowerpath) {">
							<outline text="case &quot;/now&quot;:">
								<outline text="theRequest.httpReturn (200, &quot;text/plain&quot;, new Date ().toUTCString ());"/>
								<outline text="return;"/>
								</outline>
							<outline text="case &quot;/reload&quot;:">
								<outline text="s3folderloader.load (config.s3path, config.basefolder, function (jsontext) {">
									<outline text="returnData (JSON.parse (jsontext));"/>
									<outline text="});"/>
									</outline>
								<outline text="return;"/>
								</outline>
							<outline text="default:">
								<outline text="theRequest.httpReturn (404, &quot;text/plain&quot;, &quot;Not found.&quot;);"/>
								<outline text="return;"/>
								</outline>
							<outline text="}"/>
							</outline>
						<outline text="});"/>
						</outline>
					<outline text="});" created="Sat, 12 Aug 2023 23:07:41 GMT"/>
					</outline>
				<outline text="" created="Thu, 01 Feb 2024 01:24:23 GMT"/>
				<outline text="" created="Thu, 01 Feb 2024 01:24:23 GMT"/>
				</outline>
			<outline text="config.json" created="Thu, 01 Feb 2024 01:24:52 GMT">
				<outline text="" created="Thu, 01 Feb 2024 01:24:55 GMT"/>
				</outline>
			<outline text="readme.md" created="Sat, 04 Dec 2021 16:34:28 GMT">
				<outline text="# batchloader2" created="Sat, 04 Dec 2021 16:34:30 GMT">
					<outline text="A much-simpliefied batchloader, designed for PagePark installations. " created="Sat, 04 Dec 2021 16:34:38 GMT"/>
					</outline>
				</outline>
			</outline>
		<outline text="build script" created="Sat, 04 Dec 2021 16:40:15 GMT">
			<outline text="nodeEditorSuite.utilities.buildBatchLoader2 ()" created="Sat, 04 Dec 2021 16:40:18 GMT"/>
			</outline>
		</body>
	</opml>
